---
# author: fat

# - name: Check if java local file is already configured.
  # stat: path={{ java_file_path }}
  # delegate_to: localhost
  # register: java_file_result

# - name: Create software directory.
  # file: path={{ software_files_path }} state=directory
  # delegate_to: localhost
  # when: not java_file_result.stat.exists
  
# - name: Download java file.
  # get_url: url={{ java_file_url }} dest={{ software_files_path }} validate_certs=no headers="Cookie:gpw_e24=http%3A%2F%2Fwww.oracle.com%2F;oraclelicense=accept-securebackup-cookie"
  # delegate_to: localhost
  # when: not java_file_result.stat.exists
  
# - name: Confirm the existence of the installation directory.
  # file: path={{ software_install_path }} state=directory
  
- name: Copy jdk1.8 file to agent
  unarchive:
    src: "{{ java_file }}"
    dest: "{{ software_install_path }}"
    creates: "{{ java_install_path }}"
    owner: "{{ ansible_user_gecos }}"

- name: Check if java remote soft link  is already configured.
  stat: path={{ java_home }}
  register: java_soft_link_result

- name: Create java home dir.
  file: dest=/usr/java state=directory
  when: not java_soft_link_result.stat.exists

- name: Create java dir soft link
  file: "src={{ java_install_path }} dest={{ java_home }} state=link"
  when: not java_soft_link_result.stat.exists

# Environment setup.
- name: Set JAVA_HOME if configured.
  template:
    src: java_home.sh.j2
    dest: /etc/profile.d/java_home.sh
    mode: 0644

- name: java version
  shell: source /etc/profile && java -version
  args:
   executable: /bin/bash
  register: result
  ignore_errors: True

- debug: var=result.stderr_lines
