---
# author: fat
- block:
    - name: install | Check if Mysql file is already configured.
      stat: path={{ mysql57_file_path }}
      connection: local
      register: mysql57_file_result

    - name: install | Create software files path.
      file: path={{ software_files_path }} state=directory
      connection: local
      when: not mysql57_file_result.stat.exists

    - name: install | Download Mysql file.
      get_url: url={{ mysql57_file_url }} dest={{ software_files_path }}
      connection: local
      when: not mysql57_file_result.stat.exists and mysql57_install_from_source
  run_once: true

# - name: install | Not found Mysql bin file.
  # fail: msg={{ mysql57_file_path }}
  # when: not mysql57_file_result.stat.exists and not mysql57_install_from_source
  
- name: install | Ensure Mysql libs and devel packages are installed.
  yum:
    name: "{{ mysql_yum_packages }}"
    state: installed
    update_cache: yes
  when: ansible_os_family == 'RedHat'  

- block: 
    - name: install | Ensure update_cache not warning.
      apt:
        name: python-apt
        state: present
    
    - name: install | Ensure Mysql libs and devel packages are installed.
      apt:
        name: "{{ mysql_apt_packages }}"
        state: present
        update_cache: yes
  when: ansible_os_family == 'Debian'  

- name: install | Create Mysql group.
  group: name=mysql state=present

- name: install | Create Mysql user.
  user: name=mysql shell=/sbin/nologin group=mysql

- block: 
  - name: install | Copy Mysql source files to agent.
    unarchive: src={{ mysql57_file_path }} dest=/tmp/ creates=/tmp/{{ mysql57_dirname }}

  - name: install | Build configure script.
    shell: "{{ mysql57_source_configure_command }}"
    args:
      chdir: "/tmp/{{ mysql57_dirname }}"
      creates: "{{ mysql57_basedir }}/bin/mysql"
     
  - name: install | Make and install Mysql.
    shell: "make -j {{ ansible_processor_vcpus | d(1) }} && make -j {{ ansible_processor_vcpus | d(1) }} install"
    args:
      chdir: "/tmp/{{ mysql57_dirname }}"
      creates: "{{ mysql57_basedir }}/bin/mysql"
  when: mysql57_install_from_source | bool 
  
- block:
    # - name: install | Download Mysql official glibc file.
      # get_url: url={{ mysql57_glibc_file_url }} dest={{ software_files_path }}
      # connection: local
      # run_once: true
      
    # - name: install | Copy Mysql official glibc files to agent.
      # unarchive: src={{ mysql57_glibc_file_path }} dest={{ software_install_path }} creates={{ mysql57_glibc_dirname }}/bin/mysql
      
    - name: install | Copy Mysql official glibc files to agent.
      unarchive: src={{ mysql57_glibc_file  }} dest={{ software_install_path }} creates={{ mysql57_glibc_dirname }}/bin/mysql

    - name: install | move glibc directory to basedir
      shell: mv {{ mysql57_glibc_dirname }} {{ mysql57_basedir }}
      args:
        creates: "{{ mysql57_basedir }}/bin/mysql"
        chdir: "{{ software_install_path }}"
      
  when: not mysql57_install_from_source and mysql57_official_glibc  
    
- name: install | Copy Mysql bin files to agent.
  unarchive: src={{ mysql57_file_path }} dest={{ software_install_path }} creates={{ mysql57_basedir }}/bin/mysql
  when: not mysql57_install_from_source and not mysql57_official_glibc

- name: install | Config environment variable.
  lineinfile: dest=/etc/profile line='export PATH={{ mysql57_basedir }}/bin:$PATH'
